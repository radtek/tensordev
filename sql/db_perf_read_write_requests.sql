-- -----------------------------------------------------------------------------------
-- File Name    : db_perf_read_write_requests.sql
-- Description  : Provide a listing of Read and Writes Requests in the database for
--                the last 30 days
-- Requirements : Access to the DBA views.
-- Call Syntax  : @db_perf_read_write_requests.sql
-- Last Modified: 01/08/2014
-- -----------------------------------------------------------------------------------
SET LINES 180
SET PAGES 1000

COL END_TIME FOR A20
COL CPU_TIME_DELTA FOR 999,999,999.99
COL WAIT_TIME FOR 999,999,999.99
COL ELAPSED_TIME_DELTA FOR 999,999,999.99
COL EXEC_PER_SEC FOR 999,999,999.999999

SELECT END_TIME, SUM(PHY_READ_BYTES_DELTA_MB) PHY_READ_BYTES_DELTA_MB, SUM(PHY_READ_REQUESTS_DELTA) PHY_READ_REQUESTS_DELTA, SUM(PHY_WRITE_BYTES_DELTA_MB) PHY_WRITE_BYTES_DELTA_MB, SUM(PHY_WRITE_REQUESTS_DELTA) PHY_WRITE_REQUESTS_DELTA 
FROM (
      SELECT SS.SNAP_ID, TO_CHAR(TRUNC(SN.END_INTERVAL_TIME,'DD'),'DD/MM/YYYY HH24:MI') END_TIME, SS.SQL_ID, SS.PLAN_HASH_VALUE PLAN_USED, 
             (SELECT COUNT(DISTINCT SP.PLAN_HASH_VALUE) FROM DBA_HIST_SQL_PLAN SP WHERE SP.SQL_ID = SS.SQL_ID) QTY_PLANS,
             EXECUTIONS_DELTA, ROUND(CPU_TIME_DELTA/1000000,2) CPU_TIME_DELTA, PARSING_SCHEMA_NAME,
             ROUND(ELAPSED_TIME_DELTA/1000000,2) - ROUND(CPU_TIME_DELTA/1000000,2) WAIT_TIME, 
             ROUND(ELAPSED_TIME_DELTA/1000000,2) ELAPSED_TIME_DELTA, 
             DECODE(EXECUTIONS_DELTA,0,ROUND(ELAPSED_TIME_DELTA/1000000,2), ROUND((ELAPSED_TIME_DELTA/1000000)/EXECUTIONS_DELTA,6)) EXEC_PER_SEC, 
             ROUND(PHYSICAL_READ_BYTES_DELTA/1024/1024,2) PHY_READ_BYTES_DELTA_MB,
             ROUND(PHYSICAL_READ_REQUESTS_DELTA,2) PHY_READ_REQUESTS_DELTA,
             ROUND(PHYSICAL_WRITE_BYTES_DELTA/1024/1024,2) PHY_WRITE_BYTES_DELTA_MB,
             ROUND(PHYSICAL_WRITE_REQUESTS_DELTA,2) PHY_WRITE_REQUESTS_DELTA
      FROM DBA_HIST_SQLSTAT SS 
	       JOIN DBA_HIST_SNAPSHOT SN ON (SS.SNAP_ID = SN.SNAP_ID AND SS.INSTANCE_NUMBER = SN.INSTANCE_NUMBER) 
		   JOIN DBA_HIST_SQLTEXT ST ON (SS.SQL_ID = ST.SQL_ID)
      WHERE END_INTERVAL_TIME > SYSDATE - 30
      ORDER BY SS.SNAP_ID, EXECUTIONS_DELTA
     ) 
GROUP BY END_TIME
ORDER BY END_TIME
/
